{"version":3,"sources":["components/container/Container.module.css","components/container/Container.js","components/ContactElem/ContactElem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/ContactFilter/ContactFilter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactElem/ContactElem.module.css","components/ContactFilter/ContactFilter.module.css"],"names":["module","exports","Container","children","className","s","container","ContactElem","name","number","onContactDelete","btnItem","type","onClick","ContactList","contacts","map","id","contactItem","ContactForm","onAddContact","useState","setName","setNumber","handleChange","e","target","value","onSubmit","preventDefault","form","roundedInput","pattern","title","placeholder","required","onChange","btnForm","ContactFilter","filterInputBox","filterInput","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","window","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","reLockInput","find","alert","shortid","generate","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b21de5cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3JdWU\"};","import s from './Container.module.css'\r\n\r\nexport const Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n)\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactElem.module.css'\r\n\r\nexport const ContactElem = ({ name, number, onContactDelete }) => {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={s.btnItem} type=\"button\" onClick={onContactDelete}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nContactElem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onContactDelete: PropTypes.func.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { ContactElem } from '../ContactElem/ContactElem'\r\nimport s from '../ContactElem/ContactElem.module.css'\r\n\r\nexport const ContactList = ({ contacts, onContactDelete }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.contactItem} key={id}>\r\n            <ContactElem\r\n              name={name}\r\n              number={number}\r\n              onContactDelete={() => {\r\n                onContactDelete(id)\r\n              }}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  onContactDelete: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n}\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport function ContactForm({ onAddContact }) {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  /* ------------------------- Записывает имя контакта ------------------------ */\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value)\r\n        break\r\n      case 'number':\r\n        setNumber(value)\r\n        break\r\n\r\n      default:\r\n        return\r\n    }\r\n  }\r\n  /* -------------- выводит введённые данные по нажатию на кнопку ------------- */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    onAddContact(name, number)\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholder=\"Name:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        {/* <p>Number</p> */}\r\n        <input\r\n          className={s.roundedInput}\r\n          type=\"tel\"\r\n          value={number}\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          placeholder=\"Tel:\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btnForm}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactFilter.module.css'\r\n\r\nexport const ContactFilter = ({ value, onChange }) => (\r\n  <label className={s.filterInputBox}>\r\n    <input\r\n      className={s.filterInput}\r\n      placeholder=\"Find contacts by name\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n)\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport shortid from 'shortid'\r\nimport { Container } from './components/container/Container'\r\nimport { ContactList } from './components/ContactList/ContactList'\r\nimport { ContactForm } from './components/ContactForm/ContactForm'\r\nimport { ContactFilter } from './components/ContactFilter/ContactFilter'\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([])\r\n  const [filter, setFilter] = useState('')\r\n\r\n  /* -------------------------- Запись в localStorage ------------------------- */\r\n\r\n  useEffect(() => {\r\n    const contacts = JSON.parse(localStorage.getItem('contacts'))\r\n\r\n    if (contacts) {\r\n      setContacts(contacts)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\r\n  }, [contacts])\r\n\r\n  /* ---------------------- Добавление контакта в список ---------------------- */\r\n  const addContact = (name, number) => {\r\n    const reLockInput = contacts.find((contact) => contact.name === name)\r\n\r\n    /* ------------------------ условие запрета на повторный ввод ----------------------- */\r\n    if (reLockInput) {\r\n      alert('Такой контакт уже есть в списке')\r\n    } else {\r\n      /* ------------------------ Добавляет контакт в список ----------------------- */\r\n      const contact = {\r\n        name,\r\n        number,\r\n        id: shortid.generate(),\r\n      }\r\n      setContacts((contacts) => [contact, ...contacts])\r\n    }\r\n  }\r\n\r\n  /* ----------------------- Удаление контакта из списка ---------------------- */\r\n  const contactDelete = (contactId) => {\r\n    setContacts((contacts) =>\r\n      contacts.filter((contact) => contact.id !== contactId),\r\n    )\r\n  }\r\n\r\n  /* ---------------------------- Фильтр контактов ---------------------------- */\r\n  const contactsFilter = (e) => {\r\n    const { value } = e.target\r\n    setFilter(value)\r\n  }\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n  }\r\n\r\n  const visibleContacts = getVisibleContacts()\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phoneboock</h1>\r\n      <ContactForm onAddContact={addContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <ContactFilter value={filter} onChange={contactsFilter} />\r\n      <ContactList contacts={visibleContacts} onContactDelete={contactDelete} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Y5pi\",\"roundedInput\":\"ContactForm_roundedInput__1HLkI\",\"btnForm\":\"ContactForm_btnForm__3-oWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactElem_contactItem__1JQ9z\",\"btnItem\":\"ContactElem_btnItem__1D-5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"ContactFilter_filterInput__YbZfF\",\"filterInputBox\":\"ContactFilter_filterInputBox__2Uw4L\"};"],"sourceRoot":""}